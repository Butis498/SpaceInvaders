{"version":3,"sources":["src/GameContext.ts","src/Time.ts","src/Scene.ts","src/GameObject.ts","src/Enemies.ts","src/Scenes/PauseScene.ts","src/Scenes/Player.ts","src/Bullet.ts","src/Scenes/GameOverScene.ts","src/Scenes/PlayingScene.ts","src/Scenes/DificultyScene.ts","src/Scenes/SoundScene.ts","src/Scenes/SettingsScene.ts","src/Scenes/MainMenuScene.ts","src/Engine.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class GameContext{\r\n  public static readonly scale = 40;\r\n  public static context: CanvasRenderingContext2D = null;\r\n}\r\n\r\nexport default GameContext;\r\n","class Time {\r\n  // diferencia de tiempo entre último update y update actual\r\n  public static deltaTime: number = 0;\r\n  // Número de milisegundos que han pasado desde 1970\r\n  private static previousTime: number = Date.now();\r\n\r\n  public static update() {\r\n    const currentTime = Date.now();\r\n    Time.deltaTime = (currentTime - Time.previousTime) / 1000;\r\n    Time.previousTime = currentTime;\r\n  }\r\n}\r\n\r\nexport default Time;\r\n","import Engine from './Engine';\r\nabstract class Scene {\r\n    public abstract sceneTypeN:number\r\n    public abstract render = () => {};\r\n    public abstract update = () => {};\r\n    public abstract enter = () => {};\r\n    public abstract keyUpHandler = (event: KeyboardEvent ) => {};\r\n    public abstract keyDownHandler = (event: KeyboardEvent, engine:Engine) => {\r\n        \r\n    };\r\n\r\n    public  mouseHandler = (event:MouseEvent) => {\r\n\r\n    }\r\n    public clickHandler = (event:MouseEvent)=> {\r\n        \r\n    }\r\n\r\n\r\n    public abstract sceneType=() =>{\r\n        \r\n        return this.sceneTypeN\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default  Scene;","import GameContext from './GameContext';\r\nimport Engine from './Engine';\r\nimport Enemies from './Enemies';\r\nabstract class GameObject {\r\n\r\n    public static velocityX: number =4;\r\n    public static lastVelocity: number = 4;\r\n\r\n    public static getVelocity = ()=> {\r\n        return GameObject.velocityX;\r\n    }\r\n\r\n\r\n    abstract render = (n: number) =>{\r\n\r\n    }\r\n\r\n    abstract update = (n: number) =>{\r\n\r\n    }\r\n    public static changeVelocity = (n: number) => {\r\n\r\n        switch (n) {\r\n            case 1:\r\n\r\n                GameObject.velocityX = 4;\r\n                GameObject.lastVelocity = 4;\r\n\r\n                break;\r\n            case 2:\r\n                GameObject.velocityX = 8;\r\n                GameObject.lastVelocity = 8;\r\n\r\n                break;\r\n            case 3:\r\n                GameObject.velocityX = 15;\r\n                GameObject.lastVelocity = 15;\r\n\r\n                break;\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default  GameObject;","import GameObject from './GameObject';\r\nimport Enemie1 from './../assets/hola.png'\r\nimport GameContext from './GameContext';\r\nclass Enemies extends GameObject {\r\n\r\n    private static direction: number;\r\n    private static EnemiesWidth: number = 20;\r\n    private static EnemiesHeight: number = 20;\r\n    private static posX: number ;\r\n    private static posY: number ;\r\n    private right :number;\r\n    private left: number;\r\n    private up:number;\r\n    private down:number;\r\n    private imageEnemie = new Image();\r\n    public state : boolean;\r\n    private x: number;\r\n    private y :number\r\n\r\n    constructor(index: number) {\r\n        super();\r\n        this.imageEnemie.src = Enemie1;\r\n        Enemies.direction = 1;\r\n        Enemies.posX = 50;\r\n        Enemies.posY = 40;\r\n        this.state = true;\r\n    }\r\n\r\n    public getState = () =>{\r\n        return this.state;\r\n    }\r\n\r\n\r\n    public setState = (b : boolean) => {\r\n\r\n        this.state = b;\r\n    }\r\n\r\n    public getLimits = () => {\r\n        return[this.up , this.down , this.right , this.left];\r\n    }\r\n\r\n\r\n\r\n    update = (n : number) => {\r\n        const {context} = GameContext;\r\n\r\n\r\n\r\n        if (Enemies.posX + 290 >= context.canvas.width - Enemies.EnemiesWidth) {\r\n            Enemies.direction = -1\r\n            Enemies.posY += 5;\r\n        }\r\n\r\n        if (Enemies.posX <= 10) {\r\n            Enemies.direction = 1;\r\n            Enemies.posY += 5;\r\n        }\r\n        Enemies.posX +=0.002 * Enemies.direction * GameObject.getVelocity();\r\n        \r\n\r\n        if (n * Enemies.EnemiesWidth >= 300 ) {\r\n            \r\n            this.x = Enemies.posX +(n * Enemies.EnemiesWidth)  % 300 ;\r\n            \r\n        }else{\r\n\r\n            this.x = Enemies.posX + n * Enemies.EnemiesWidth;\r\n        }\r\n\r\n        this.y = Enemies.posY + Math.floor(n/(300/Enemies.EnemiesWidth))* Enemies.EnemiesHeight;\r\n        this.up = this.y;\r\n        this.down = this.y + Enemies.EnemiesHeight;\r\n        this.right = this.x + Enemies.EnemiesWidth;\r\n        this.left = this.x;\r\n\r\n        \r\n        \r\n\r\n    }\r\n    render = (n: number) => {\r\n\r\n        \r\n        const {context} = GameContext;\r\n\r\n        context.drawImage(this.imageEnemie, this.x, this.y, Enemies.EnemiesWidth, Enemies.EnemiesHeight)\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default Enemies;","import Scene from '../Scene';\r\nimport GameContext from '../GameContext';\r\nimport Engine from '../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport SettingsScene from './SettingsScene';\r\nimport PlayingScene from './PlayingScene';\r\nimport index from './../index';\r\n\r\nclass PauseScene extends Scene {\r\n\r\n    private options = [\"PAUSE\", \"MENU\", \"RESUME\"];\r\n    private currentOption: number = 1;\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    private scene: Scene;\r\n    private sound: boolean;\r\n    sceneTypeN = 1;\r\n\r\n\r\n    constructor(scene: Scene  , sound : boolean) {\r\n        super();\r\n        this.scene = scene;\r\n        this.sound = sound;\r\n    }\r\n\r\n    public enter = () => {\r\n\r\n\r\n    }\r\n\r\n    public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\r\n        const { key } = event;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n\r\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption =this.options.length - 1;\r\n                }\r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n\r\n                this.currentOption = (this.currentOption + 1) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption ++;\r\n                }\r\n\r\n\r\n                break;\r\n            case \"Enter\":\r\n\r\n\r\n\r\n                if (this.currentOption === 1) {\r\n\r\n                    delete this.scene;\r\n                    if (this.sound) {\r\n                        index.changeSound(1 , this);\r\n                    }\r\n                    engine.changeScene(new MainMenuScene());\r\n                }\r\n                   \r\n                    \r\n\r\n                if (this.currentOption === 2) {\r\n\r\n                    if (this.sound) {\r\n                        index.changeSound(1 , this);\r\n                    }\r\n                    engine.changeScene(this.scene);\r\n                }\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public keyUpHandler = (event: KeyboardEvent) => {\r\n        const { key } = event;\r\n\r\n    }\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n    public render = () => {\r\n\r\n\r\n        const { context } = GameContext;\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"red\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"45px STARWARS\";\r\n\r\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\r\n\r\n        context.closePath();\r\n        context.restore();\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.lineWidth = 5;\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n\r\n\r\n        for (let i = 1; i < this.options.length; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100);\r\n            }\r\n\r\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100);\r\n\r\n\r\n        }\r\n\r\n        context.closePath();\r\n        context.restore();\r\n\r\n    }\r\n\r\n    public update = () => {\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default PauseScene;","import playerImage from './../../assets/ship3.png';\r\nimport GameContext from './../GameContext';\r\nimport Time from \"./../Time\";\r\n\r\nconst sWidth = 50;\r\nconst sHeight = 50;\r\nconst posY = 400 * 0.75;\r\n\r\nclass Player{\r\n\r\nprivate posX = 0;\r\nprivate speed = 200;\r\nprivate characterImage = new Image();\r\nprivate up : number;\r\nprivate down: number;\r\nprivate right: number;\r\nprivate left : number;\r\n\r\n\r\npublic getLimits = () => {\r\n\r\n    return [this.up , this.down , this.right , this.left];\r\n}\r\n\r\npublic moving(event:MouseEvent) {\r\n  var xOffset = event.offsetX;\r\n  this.posX = xOffset - sWidth / 2;\r\n}\r\n\r\n\r\n  public getPosition() {\r\n    return this.posX;\r\n  }\r\n\r\n  public getWidth() {\r\n    return sWidth;\r\n  }\r\n\r\n  constructor() {\r\n    this.characterImage.src = playerImage;\r\n    const { context } = GameContext;\r\n    const { width, height } = context.canvas;\r\n    this.posX = \r\n      (width - sWidth) / 2;\r\n      this.up = posY;\r\n      this.down = posY + sHeight\r\n      this.right = this.posX + sWidth;\r\n      this.left = this.posX\r\n  }\r\n  \r\n  public update = () => {\r\n\r\n      this.down = posY + sHeight\r\n      this.right = this.posX + sWidth;\r\n      this.left = this.posX\r\n  };\r\n\r\n  public render = () => {\r\n    const { context } = GameContext;\r\n    context.save();\r\n    context.beginPath();\r\n    context.drawImage(\r\n      this.characterImage,\r\n      this.posX,\r\n      posY,\r\n      sWidth,\r\n      sHeight\r\n    );\r\n    context.closePath();\r\n    context.restore();\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default Player;","import Player from \"./Scenes/Player\";\r\nimport GameContext from './GameContext';\r\n\r\n class Bullet {\r\n\r\n    private posX: number;\r\n    private posY: number;\r\n    private width:number = 3;\r\n    private height:number = 25;\r\n    private velocity: number =  - 5;\r\n    private up : number;\r\n    private down :number;\r\n    private right: number;\r\n    private left: number;\r\n\r\n     constructor(player : Player) {\r\n\r\n        this.posX = player.getPosition() + player.getWidth()/2;\r\n        this.posY = 400 * 0.75 ;\r\n        this.up = this.posY;\r\n        this.down = this.posY + this.height;\r\n        this.left = this.posX;\r\n        this.right = this.posX + this.width;\r\n\r\n         \r\n     }\r\n\r\n     public getLimits(){\r\n\r\n      return [this.up , this.down , this.right , this.left];\r\n     }\r\n\r\n     public getPosY = () => {\r\n        return this.posY;\r\n     }\r\n\r\n     public render (){\r\n\r\n\r\n        const {context} = GameContext;\r\n\r\n        context.save()\r\n        context.beginPath();\r\n\r\n        context.fillStyle = \"lime\";\r\n\r\n        context.fillRect(this.posX , this.posY , this.width , this.height);\r\n    \r\n\r\n\r\n     }\r\n\r\n     public update (){\r\n\r\n        this.posY += this.velocity;\r\n        this.up = this.posY;\r\n        this.down = this.posY + this.height;\r\n        this.right = this.posX + this.width;\r\n\r\n\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n }\r\n\r\n\r\n export default Bullet;","import Scene from './../Scene';\r\nimport GameContext from './../GameContext';\r\nimport GOIMG from './../../assets/10.jpg'\r\nimport Engine from './../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport PlayingScene from './PlayingScene';\r\nimport GameObject from '../GameObject';\r\n\r\n\r\nclass GameOverScene extends Scene {\r\n\r\n    private options  = [\"RESTART\" , \"MENU\"];\r\n    private currentOption : number = 0;\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    private image = new Image;\r\n    sceneTypeN = 1;\r\n\r\n    public enter = () =>{\r\n\r\n    }\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n\r\n\r\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\r\n        const {key} = event;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n\r\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n\r\n                this.currentOption = (this.currentOption + 1) % this.options.length;\r\n\r\n                break;\r\n            case \"Enter\":\r\n                \r\n                if (this.currentOption === 1) {\r\n                    GameObject.velocityX = GameObject.lastVelocity;\r\n                    engine.changeScene(new MainMenuScene());\r\n                }\r\n\r\n                if (this.currentOption === 0) {\r\n                    GameObject.velocityX = GameObject.lastVelocity;\r\n                    engine.changeScene(new PlayingScene(engine));\r\n                }\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public keyUpHandler = (event : KeyboardEvent) =>{\r\n        const {key} = event;\r\n\r\n    }\r\n\r\n    public render = () =>{\r\n\r\n        this.image.src = GOIMG;\r\n\r\n        const {context} = GameContext;\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.drawImage(this.image ,-220,-100 );\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n        context.lineWidth = 5;\r\n\r\n\r\n\r\n        for (let i = 0; i < this.options.length; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i],this.width / 2, this.height / 2 + i * 30 + 130)\r\n            }\r\n            context.fillText(this.options[i], this.width / 2, this.height / 2 + i * 30 + 130)\r\n            //context.fillText(play.score.toString(), 150, 150);\r\n        }\r\n        context.closePath();\r\n        context.restore();\r\n        \r\n      \r\n    }\r\n\r\n    public update = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default GameOverScene;","import Scene from \"./../Scene\";\r\nimport Engine from './../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport GameObject from '../GameObject';\r\nimport GameContext from '../GameContext';\r\nimport Enemies from '../Enemies';\r\nimport PauseScene from \"./PauseScene\";\r\nimport index from './../index';\r\nimport Player from './Player';\r\nimport Bullet from '../Bullet';\r\nimport pew from './../../assets/pew.mp3'\r\nimport GameOverScene from \"./GameOverScene\";\r\nimport sound from '../../assets/explosion.mp3'\r\nimport nextLevel from '../../assets/next.mp3'\r\nimport GG from '../../assets/Game-over-sound.mp3'\r\n\r\n\r\nclass PlayingScene extends Scene {\r\n    public score: number = 0;\r\n\r\n    private enemies: Enemies[] = [];\r\n    private numberOfEnemies: number = 60;\r\n    private player: Player = null;\r\n    private bullets: Bullet[] = [];\r\n    private engine: Engine;\r\n    public finalScore: number = 0;\r\n\r\n    sceneTypeN = 0;\r\n\r\n\r\n    constructor(engine: Engine) {\r\n        super();\r\n        for (let index = 0; index < this.numberOfEnemies; index++) {\r\n            this.enemies.push(new Enemies(index));\r\n\r\n        }\r\n\r\n        this.player = new Player();\r\n        this.engine = engine\r\n\r\n        if (index.getSoundState()) {\r\n            index.changeSound(1, this);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public colicion = (enemie: Enemies, bullet: Bullet) => {\r\n\r\n\r\n        const bUp = bullet.getLimits()[0];\r\n        const bDown = bullet.getLimits()[1];\r\n        const bRight = bullet.getLimits()[2];\r\n        const bleft = bullet.getLimits()[3];\r\n\r\n        const eUp = enemie.getLimits()[0];\r\n        const eDown = enemie.getLimits()[1];\r\n        const eRight = enemie.getLimits()[2];\r\n        const eLeft = enemie.getLimits()[3];\r\n\r\n\r\n        //console.log(bleft, \"<\", eRight, \"  \", bRight, \">\", eLeft, \"  \", bUp, \" > \", eDown, \"  \", bDown, \" < \", eUp);\r\n\r\n\r\n\r\n\r\n        if (bleft < eRight && bRight > eLeft && bUp < eDown && bDown > eUp) {\r\n\r\n            console.log(true)\r\n            this.score += 10;\r\n\r\n            return true\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public colicionPlayer = (enemie: Enemies, player: Player) => {\r\n\r\n\r\n        const bUp = player.getLimits()[0];\r\n        const bDown = player.getLimits()[1];\r\n        const bRight = player.getLimits()[2];\r\n        const bleft = player.getLimits()[3];\r\n\r\n        const eUp = enemie.getLimits()[0];\r\n        const eDown = enemie.getLimits()[1];\r\n        const eRight = enemie.getLimits()[2];\r\n        const eLeft = enemie.getLimits()[3];\r\n\r\n\r\n        //console.log(bleft, \"<\", eRight, \"  \", bRight, \">\", eLeft, \"  \", bUp, \" > \", eDown, \"  \", bDown, \" < \", eUp);\r\n\r\n\r\n\r\n\r\n        if (bleft < eRight && bRight > eLeft && bUp < eDown && bDown > eUp) {\r\n\r\n            console.log(true)\r\n            return true\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render = () => {\r\n\r\n        const { context } = GameContext;\r\n        const { width, height } = GameContext.context.canvas;\r\n\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0, 0, width, height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        for (let index = 0; index < this.enemies.length; index++) {\r\n            const element = this.enemies[index];\r\n\r\n            if (element.getState()) {\r\n                element.render(index);\r\n\r\n            }\r\n            element.update(index);\r\n        }\r\n\r\n\r\n        this.player.render();\r\n\r\n\r\n        for (let index = 0; index < this.bullets.length; index++) {\r\n            const element = this.bullets[index];\r\n            element.render();\r\n\r\n        }\r\n\r\n\r\n        context.fillText(this.score.toString(), 10, 50);\r\n\r\n    };\r\n    public enter = () => {\r\n    };\r\n    public update = async () => {\r\n        const { context } = GameContext;\r\n\r\n        this.player.update();\r\n\r\n        for (let index = 0; index < this.bullets.length; index++) {\r\n            const element = this.bullets[index];\r\n            element.update();\r\n        }\r\n\r\n\r\n        this.bullets = this.bullets.filter((ele) => {\r\n            if (ele.getPosY() != 0) {\r\n                return ele;\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        for (let index = 0; index < this.enemies.length; index++) {\r\n            const element = this.enemies[index];\r\n\r\n            if (element.getState()) {\r\n\r\n                this.bullets = this.bullets.filter((bul) => {\r\n\r\n                    if (!this.colicion(element, bul)) {\r\n\r\n\r\n                        return bul;\r\n\r\n                    } else {\r\n\r\n                        let soundM = document.createElement('audio');\r\n                        soundM.src =  sound;\r\n                        soundM.play();\r\n                        element.setState(false);\r\n\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (let index = 0; index < this.enemies.length; index++) {\r\n            const element = this.enemies[index];\r\n\r\n            if (!element.getState()) {\r\n\r\n                GameObject.velocityX += 0.001;\r\n            }\r\n        }\r\n        let bool = false;\r\n\r\n        for (let index = 0; index < this.enemies.length; index++) {\r\n            const element = this.enemies[index];\r\n            let aux = await element.getState()\r\n\r\n            if (!aux) {\r\n                bool = true;\r\n            } else {\r\n\r\n                bool = false\r\n                break;\r\n            };\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        if (bool) {\r\n            this.enemies = [];\r\n            let nextLevelSound  = document.createElement('audio');\r\n            nextLevelSound.src = nextLevel;\r\n            \r\n            if (index.getSoundState() ) {\r\n                nextLevelSound.play();\r\n            }\r\n            this.numberOfEnemies += 10;\r\n            GameObject.velocityX = GameObject.lastVelocity;\r\n            this.bullets = []\r\n\r\n            for (let index = 0; index < this.numberOfEnemies; index++) {\r\n                this.enemies.push(new Enemies(index));\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        for (let inde = 0; inde < this.enemies.length; inde++) {\r\n            const element = this.enemies[inde];\r\n\r\n            if (element.getLimits()[1] >= context.canvas.height || (this.colicionPlayer(element, this.player) && element.getState())) {\r\n\r\n                let GGSound  = document.createElement('audio');\r\n                GGSound.src = GG;\r\n                \r\n                if (index.getSoundState() ) {\r\n                    GGSound.play();\r\n                }\r\n\r\n                this.engine.changeScene(new GameOverScene());\r\n            }\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    public keyUpHandler = (event: KeyboardEvent) => {\r\n        const { key } = event;\r\n\r\n    };\r\n    public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\r\n        const { key } = event;\r\n\r\n        if (key === 'p') {\r\n\r\n\r\n            engine.changeScene(new PauseScene(this, index.getSoundState()));\r\n            index.changeSound(2, this);\r\n        }\r\n\r\n    };\r\n\r\n    public mouseHandler = (event: MouseEvent) => {\r\n\r\n        this.player.moving(event);\r\n    }\r\n\r\n    public clickHandler = async (event: MouseEvent) => {\r\n\r\n        const audio = document.createElement('audio');\r\n        audio.src = pew;\r\n        await audio.play();\r\n\r\n\r\n        this.bullets.push(new Bullet(this.player));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public sceneType = () => {\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayingScene;","import Scene from '../Scene';\r\nimport GameContext from '../GameContext';\r\nimport Engine from '../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport SettingsScene from './SettingsScene';\r\nimport Enemies from '../Enemies';\r\nimport GameObject from '../GameObject';\r\n\r\n\r\nclass DIficultyScene extends Scene {\r\n\r\n    private options  = [ \"DIFICULTY\" , \"EASY\" , \"MEDIUM\" , \"HARD\" , \"BACK\" ];\r\n    private currentOption : number = 1;\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    private enemies = Enemies;\r\n\r\n    sceneTypeN = 1;\r\n    public enter = () =>{\r\n\r\n    }\r\n\r\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\r\n        const {key} = event;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n\r\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption =this.options.length - 1;\r\n                }\r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n\r\n                this.currentOption = (this.currentOption + 1) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption ++;\r\n                }\r\n\r\n\r\n                break;\r\n            case \"Enter\":\r\n                \r\n                \r\n\r\n                if (this.currentOption === 4) {\r\n                    \r\n                    engine.changeScene(new SettingsScene());\r\n                }else{\r\n\r\n                    GameObject.changeVelocity(this.currentOption);\r\n                    engine.changeScene(new MainMenuScene());\r\n                }\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public keyUpHandler = (event : KeyboardEvent) =>{\r\n        const {key} = event;\r\n\r\n    }\r\n\r\n    public render = () =>{\r\n\r\n\r\n        const {context} = GameContext;\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"red\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"45px STARWARS\";\r\n\r\n\r\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\r\n        \r\n        context.closePath();\r\n        context.restore();\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n        context.lineWidth = 5;\r\n\r\n\r\n        for (let i = 1; i < this.options.length - 1 ; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 100)\r\n\r\n\r\n            }\r\n            if (this.currentOption ===4 ) {\r\n                context.strokeText(this.options[4], this.width / 2, 385)\r\n\r\n            }\r\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100)\r\n            context.fillText(this.options[4], this.width / 2, 385);\r\n\r\n\r\n        }\r\n\r\n        context.closePath();\r\n        context.restore();\r\n\r\n    }\r\n\r\n    public update = () =>{\r\n\r\n    }\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n}\r\n\r\nexport default DIficultyScene;","import Scene from '../Scene';\r\nimport GameContext from '../GameContext';\r\nimport Engine from '../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport SettingsScene from './SettingsScene';\r\nimport index from './../index';\r\n\r\n\r\nclass SoundScene extends Scene {\r\n\r\n    private options  = [ \"SOUND\" , \"ON\" , \"OFF\"  , \"BACK\" ];\r\n    private currentOption : number = 1;\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    sceneTypeN = 1;\r\n\r\n    public enter = () =>{\r\n\r\n    }\r\n\r\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\r\n        const {key} = event;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n                this.currentOption = (this.currentOption - 1 + this.options.length  ) % this.options.length  ;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption =this.options.length - 1;\r\n                }\r\n               \r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n                this.currentOption = (this.currentOption + 1) % (this.options.length  );\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption ++;\r\n                }\r\n\r\n\r\n                break;\r\n            case \"Enter\":\r\n                \r\n                \r\n\r\n                if (this.currentOption === 3) {\r\n                    \r\n                    engine.changeScene(new SettingsScene());\r\n                }\r\n\r\n                if (this.currentOption === 2 || this.currentOption === 1) {\r\n                    index.changeSound(this.currentOption , this);\r\n                    engine.changeScene(new SettingsScene());\r\n                }\r\n                \r\n\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n\r\n\r\n    public keyUpHandler = (event : KeyboardEvent) =>{\r\n        const {key} = event;\r\n\r\n    }\r\n\r\n    public render = () =>{\r\n\r\n\r\n        const {context} = GameContext;\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"red\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"45px STARWARS\";\r\n\r\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\r\n        \r\n        context.closePath();\r\n        context.restore();\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n        context.lineWidth = 5;\r\n\r\n\r\n\r\n        for (let i = 1; i < this.options.length - 1 ; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 100)\r\n\r\n\r\n            }\r\n            if (this.currentOption ===3 ) {\r\n                context.strokeText(this.options[3], this.width / 2, 385)\r\n\r\n            }\r\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100)\r\n            context.fillText(this.options[3], this.width / 2, 385);\r\n\r\n\r\n        }\r\n\r\n        context.closePath();\r\n        context.restore();\r\n\r\n    }\r\n\r\n    public update = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default SoundScene;","import Scene from '../Scene';\r\nimport GameContext from '../GameContext';\r\nimport Engine from '../Engine';\r\nimport MainMenuScene from './MainMenuScene';\r\nimport DIficultyScene from './DificultyScene';\r\nimport SoundScene from './SoundScene';\r\n\r\n\r\nclass SettingsScene extends Scene {\r\n\r\n    private options  = [ \"SETTINGS\" , \"SOUND\" , \"DIFICULTY\" , \"BACK\" ];\r\n    private currentOption : number = 1;\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    sceneTypeN = 1;\r\n\r\n    public enter = () =>{\r\n\r\n    }\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n\r\n\r\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\r\n        const {key} = event;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n\r\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption =this.options.length - 1;\r\n                }\r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n\r\n                this.currentOption = (this.currentOption + 1) % this.options.length;\r\n                if (this.currentOption === 0) {\r\n                    this.currentOption ++;\r\n                }\r\n\r\n                break;\r\n            case \"Enter\":\r\n                \r\n                if (this.currentOption === 3) {\r\n                    engine.changeScene(new MainMenuScene());\r\n                }\r\n\r\n                if (this.currentOption === 2) {\r\n                    engine.changeScene(new DIficultyScene());\r\n                }\r\n\r\n                if (this.currentOption === 1) {\r\n                    engine.changeScene(new SoundScene());\r\n                }\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public keyUpHandler = (event : KeyboardEvent) =>{\r\n        const {key} = event;\r\n\r\n    }\r\n\r\n    public render = () =>{\r\n\r\n\r\n        const {context} = GameContext;\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"red\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"45px STARWARS\";\r\n\r\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\r\n        \r\n        context.closePath();\r\n        context.restore();\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n        context.lineWidth = 5;\r\n\r\n\r\n\r\n        for (let i = 1; i < this.options.length; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 130)\r\n            }\r\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 130)\r\n        }\r\n        context.closePath();\r\n        context.restore();\r\n\r\n    }\r\n\r\n    public update = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default SettingsScene;","import Scene from \"../Scene\";\r\nimport GameContext from '../GameContext';\r\nimport Engine from '../Engine';\r\nimport PlayingScene from './PlayingScene';\r\nimport titleImg from './../../assets/imageedit_2_7701798241.jpg'\r\nimport GameOverScene from \"./GameOverScene\";\r\nimport SettingsScene from \"./SettingsScene\";\r\nimport PauseScene from \"./PauseScene\";\r\n\r\nclass MainMenuScene extends Scene {\r\n\r\n    private currentOption: number = 0;\r\n    private options = [\"PLAY\", \"SETTINGS\"];\r\n    private width = GameContext.context.canvas.width;\r\n    private height = GameContext.context.canvas.height;\r\n    private image = new Image;\r\n    sceneTypeN = 1;\r\n\r\n\r\n    public render = () => {\r\n\r\n        this.image.src = titleImg;\r\n        const context = GameContext.context;\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.fillStyle = \"black\";\r\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\r\n        context.closePath();\r\n        context.restore();\r\n\r\n        context.drawImage(this.image ,-72,0 );\r\n\r\n\r\n        context.save();\r\n        context.beginPath();\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        context.strokeStyle = \"red\";\r\n        context.font = \"25px STARWARS\";\r\n        context.lineWidth = 5;\r\n\r\n        for (let i = 0; i < this.options.length; i++) {\r\n\r\n            if (i === this.currentOption) {\r\n                context.strokeText(this.options[i],this.width / 2, this.height / 2 + i * 30 + 130)\r\n            }\r\n            context.fillText(this.options[i], this.width / 2, this.height / 2 + i * 30 + 130)\r\n        }\r\n        context.closePath();\r\n        context.restore();\r\n    };\r\n    public update = () => { };\r\n    public keyUpHandler = (event: KeyboardEvent) => { };\r\n    public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\r\n\r\n        const key = event.key;\r\n\r\n        switch (key) {\r\n            case \"ArrowUp\":\r\n\r\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\r\n\r\n                break;\r\n\r\n            case \"ArrowDown\":\r\n\r\n                this.currentOption = (this.currentOption + 1) % this.options.length;\r\n\r\n                break;\r\n            case \"Enter\":\r\n                \r\n                if (this.currentOption === 0) {\r\n                    \r\n                    engine.changeScene(new PlayingScene(engine));\r\n                }\r\n\r\n                if (this.currentOption === 1) {\r\n                    engine.changeScene(new SettingsScene());\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    };\r\n    public enter = () => { };\r\n\r\n    public  sceneType = () =>{\r\n\r\n\r\n        return this.sceneTypeN;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default MainMenuScene;","import GameContext from \"./GameContext\";\r\nimport Time from \"./Time\";\r\nimport Scene from \"./Scene\";\r\nimport PlayingScene from './Scenes/PlayingScene';\r\nimport MainMenuScene from './Scenes/MainMenuScene';\r\nimport PauseScene from \"./Scenes/PauseScene\";\r\nimport index from './index';\r\nimport pew from './../assets/pew.mp3'\r\n\r\nclass Engine {\r\n\r\n  \r\n\r\n  private curretScene: Scene = null;\r\n  private sound : Document;\r\n  // Iniciar el motor del juego.\r\n\r\n public changeScene = (scene: Scene) =>{\r\n   this.curretScene = scene;\r\n   this.curretScene.enter();\r\n }\r\n\r\n  public start = () => {\r\n    this.init();\r\n    requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  public keydownHandler = (event: KeyboardEvent) => {\r\n    this.curretScene.keyDownHandler(event , this);\r\n  };\r\n\r\n  public keyupHandler = (event: KeyboardEvent) => {\r\n    this.curretScene.keyUpHandler(event);\r\n  };\r\n\r\n  // Limpiar pantalla y dibujar fondo.\r\n  private clearScreen = () => {\r\n    const context = GameContext.context;\r\n    const canvas = context.canvas;\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n\r\n    context.save();\r\n    context.beginPath();\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.closePath();\r\n    context.restore();\r\n  };\r\n\r\n  public init = () => {\r\n    this.curretScene = new MainMenuScene();\r\n    this.curretScene.enter();\r\n  };\r\n\r\n  // Método que se ejecuta en cada frame del juego.\r\n  public tick = () => {\r\n    this.clearScreen();\r\n    Time.update();\r\n    this.curretScene.update();\r\n    this.curretScene.render();\r\n\r\n    requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  public mouseHandler = (event: MouseEvent) =>{\r\n      this.curretScene.mouseHandler(event);\r\n  }\r\n\r\n  public clickHandler = (event: MouseEvent) => {\r\n \r\n    this.curretScene.clickHandler(event);\r\n  }\r\n}\r\n\r\nexport default Engine;\r\n","import Engine from './Engine';\r\nimport GameContext from \"./GameContext\";\r\nimport Music from \"./../assets/sound.mp3\"\r\nimport { async } from 'q';\r\nimport MenuMusic from './../assets/haloMenu.mp3'\r\nimport Scene from './Scene';\r\nimport PlayingScene from './Scenes/PlayingScene';\r\nimport MainMenuScene from './Scenes/MainMenuScene';\r\n\r\n//  Nota: No es necesario escribir código nuevo en este archivo.\r\n\r\nlet sound: boolean = true\r\nlet menuSound: boolean = true\r\n\r\nconst music = document.createElement(\"audio\");\r\nmusic.src = Music;\r\nmusic.loop = true;\r\n\r\n\r\nconst MenuSound = document.createElement('audio');\r\nMenuSound.src = MenuMusic;\r\nMenuSound.loop = true;\r\n\r\n\r\nlet changeSound = async(n: number , scene:Scene) => {\r\n    if (n === 1) {\r\n\r\n        if (scene.sceneType() === 1) {\r\n            await MenuSound.play()\r\n            await music.pause();\r\n        }else{\r\n            await music.play();\r\n            await MenuSound.pause()\r\n\r\n        }\r\n        sound = true; \r\n\r\n        \r\n    }\r\n    if (n === 2) {\r\n        if (scene.sceneType() === 1) {\r\n            await MenuSound.pause()\r\n        }else{\r\n            await music.pause();\r\n        }\r\n\r\n        sound = false;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst canvas = document.getElementById(\"game-area\") as HTMLCanvasElement;\r\nconst context = canvas.getContext(\"2d\");\r\n\r\nGameContext.context = context;\r\n\r\nconst engine = new Engine();\r\nchangeSound(1 , new MainMenuScene());\r\nlet getSoundState = () => {\r\n    return sound;\r\n}\r\nengine.start();\r\ncanvas.addEventListener(\"keydown\", engine.keydownHandler);\r\ncanvas.addEventListener(\"keyup\", engine.keyupHandler);\r\ncanvas.addEventListener('mousemove' , engine.mouseHandler);\r\ncanvas.addEventListener('mousedown' , engine.clickHandler);\r\n\r\n//hola\r\n\r\nexport default { changeSound , getSoundState }","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}