{"version":3,"sources":["src/GameContext.ts","src/Time.ts","src/Scene.ts","src/Scenes/GameOverScene.ts","src/Scenes/DificultyScene.ts","src/Scenes/SoundScene.ts","src/Scenes/SettingsScene.ts","src/Scenes/MainMenuScene.ts","src/Engine.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class GameContext {\n  public static readonly scale = 40;\n  public static context: CanvasRenderingContext2D = null;\n}\n\nexport default GameContext;\n","class Time {\n  // diferencia de tiempo entre último update y update actual\n  public static deltaTime: number = 0;\n  // Número de milisegundos que han pasado desde 1970\n  private static previousTime: number = Date.now();\n\n  public static update() {\n    const currentTime = Date.now();\n    Time.deltaTime = (currentTime - Time.previousTime) / 1000;\n    Time.previousTime = currentTime;\n  }\n}\n\nexport default Time;\n","import Engine from './Engine';\nabstract class Scene {\n\n    public abstract render = () => {};\n    public abstract update = () => {};\n    public abstract enter = () => {};\n    public abstract keyUpHandler = (event: KeyboardEvent ) => {};\n    public abstract keyDownHandler = (event: KeyboardEvent, engine:Engine) => {\n        \n    };\n\n\n}\n\nexport default  Scene;","import Scene from './../Scene';\nimport GameContext from './../GameContext';\nimport GOIMG from './../../assets/10.jpg'\nimport Engine from './../Engine';\nimport MainMenuScene from './MainMenuScene';\n\n\nclass GameOverScene extends Scene {\n\n    private options  = [\"RESTART\" , \"MENU\"];\n    private currentOption : number = 0;\n    private width = GameContext.context.canvas.width;\n    private height = GameContext.context.canvas.height;\n    private image = new Image;\n\n    public enter = () =>{\n\n    }\n\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\n        const {key} = event;\n\n        switch (key) {\n            case \"ArrowUp\":\n\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\n\n                break;\n\n            case \"ArrowDown\":\n\n                this.currentOption = (this.currentOption + 1) % this.options.length;\n\n                break;\n            case \"Enter\":\n                \n                if (this.currentOption === 1) {\n                    engine.changeScene(new MainMenuScene());\n                }\n\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    public keyUpHandler = (event : KeyboardEvent) =>{\n        const {key} = event;\n\n    }\n\n    public render = () =>{\n\n        this.image.src = GOIMG;\n\n        const {context} = GameContext;\n\n        context.save();\n        context.beginPath();\n        context.fillStyle = \"black\";\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\n        context.closePath();\n        context.restore();\n\n        context.drawImage(this.image ,-220,-100 );\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"white\";\n        context.strokeStyle = \"red\";\n        context.font = \"25px STARWARS\";\n        context.lineWidth = 5;\n\n\n\n        for (let i = 0; i < this.options.length; i++) {\n\n            if (i === this.currentOption) {\n                context.strokeText(this.options[i],this.width / 2, this.height / 2 + i * 30 + 130)\n            }\n            context.fillText(this.options[i], this.width / 2, this.height / 2 + i * 30 + 130)\n        }\n        context.closePath();\n        context.restore();\n\n    }\n\n    public update = () =>{\n\n    }\n}\n\nexport default GameOverScene;","import Scene from '../Scene';\nimport GameContext from '../GameContext';\nimport Engine from '../Engine';\nimport MainMenuScene from './MainMenuScene';\nimport SettingsScene from './SettingsScene';\n\n\nclass DIficultyScene extends Scene {\n\n    private options  = [ \"DIFICULTY\" , \"EASY\" , \"MEDIUM\" , \"HARD\" , \"BACK\" ];\n    private currentOption : number = 0;\n    private width = GameContext.context.canvas.width;\n    private height = GameContext.context.canvas.height;\n\n    public enter = () =>{\n\n    }\n\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\n        const {key} = event;\n\n        switch (key) {\n            case \"ArrowUp\":\n\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\n\n                break;\n\n            case \"ArrowDown\":\n\n                this.currentOption = (this.currentOption + 1) % this.options.length;\n\n                break;\n            case \"Enter\":\n                \n                \n\n                if (this.currentOption === 4) {\n                    \n                    engine.changeScene(new SettingsScene());\n                }\n\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    public keyUpHandler = (event : KeyboardEvent) =>{\n        const {key} = event;\n\n    }\n\n    public render = () =>{\n\n\n        const {context} = GameContext;\n\n        context.save();\n        context.beginPath();\n        context.fillStyle = \"black\";\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\n        context.closePath();\n        context.restore();\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"red\";\n        context.strokeStyle = \"red\";\n        context.font = \"45px STARWARS\";\n\n\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\n        \n        context.closePath();\n        context.restore();\n\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"white\";\n        context.strokeStyle = \"red\";\n        context.font = \"25px STARWARS\";\n        context.lineWidth = 5;\n\n\n        for (let i = 1; i < this.options.length - 1 ; i++) {\n\n            if (i === this.currentOption) {\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 100)\n\n\n            }\n            if (this.currentOption ===4 ) {\n                context.strokeText(this.options[4], this.width / 2, 385)\n\n            }\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100)\n            context.fillText(this.options[4], this.width / 2, 385);\n\n\n        }\n\n        context.closePath();\n        context.restore();\n\n    }\n\n    public update = () =>{\n\n    }\n}\n\nexport default DIficultyScene;","import Scene from '../Scene';\nimport GameContext from '../GameContext';\nimport Engine from '../Engine';\nimport MainMenuScene from './MainMenuScene';\nimport SettingsScene from './SettingsScene';\n\n\nclass SoundScene extends Scene {\n\n    private options  = [ \"SOUND\" , \"ON\" , \"OFF\"  , \"BACK\" ];\n    private currentOption : number = 0;\n    private width = GameContext.context.canvas.width;\n    private height = GameContext.context.canvas.height;\n\n    public enter = () =>{\n\n    }\n\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\n        const {key} = event;\n\n        switch (key) {\n            case \"ArrowUp\":\n\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\n\n                break;\n\n            case \"ArrowDown\":\n\n                this.currentOption = (this.currentOption + 1) % this.options.length;\n\n                break;\n            case \"Enter\":\n                \n                \n\n                if (this.currentOption === 3) {\n                    \n                    engine.changeScene(new SettingsScene());\n                }\n\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    public keyUpHandler = (event : KeyboardEvent) =>{\n        const {key} = event;\n\n    }\n\n    public render = () =>{\n\n\n        const {context} = GameContext;\n\n        context.save();\n        context.beginPath();\n        context.fillStyle = \"black\";\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\n        context.closePath();\n        context.restore();\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"red\";\n        context.strokeStyle = \"red\";\n        context.font = \"45px STARWARS\";\n\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\n        \n        context.closePath();\n        context.restore();\n\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"white\";\n        context.strokeStyle = \"red\";\n        context.font = \"25px STARWARS\";\n        context.lineWidth = 5;\n\n\n\n        for (let i = 1; i < this.options.length - 1 ; i++) {\n\n            if (i === this.currentOption) {\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 100)\n\n\n            }\n            if (this.currentOption ===3 ) {\n                context.strokeText(this.options[3], this.width / 2, 385)\n\n            }\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 100)\n            context.fillText(this.options[3], this.width / 2, 385);\n\n\n        }\n\n        context.closePath();\n        context.restore();\n\n    }\n\n    public update = () =>{\n\n    }\n}\n\nexport default SoundScene;","import Scene from '../Scene';\nimport GameContext from '../GameContext';\nimport Engine from '../Engine';\nimport MainMenuScene from './MainMenuScene';\nimport DIficultyScene from './DificultyScene';\nimport SoundScene from './SoundScene';\n\n\nclass SettingsScene extends Scene {\n\n    private options  = [ \"SETTINGS\" , \"SOUND\" , \"DIFICULTY\" , \"BACK\" ];\n    private currentOption : number = 0;\n    private width = GameContext.context.canvas.width;\n    private height = GameContext.context.canvas.height;\n\n    public enter = () =>{\n\n    }\n\n    public keyDownHandler = (event: KeyboardEvent , engine :Engine) => {\n        const {key} = event;\n\n        switch (key) {\n            case \"ArrowUp\":\n\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\n\n                break;\n\n            case \"ArrowDown\":\n\n                this.currentOption = (this.currentOption + 1) % this.options.length;\n\n                break;\n            case \"Enter\":\n                \n                if (this.currentOption === 3) {\n                    engine.changeScene(new MainMenuScene());\n                }\n\n                if (this.currentOption === 2) {\n                    engine.changeScene(new DIficultyScene());\n                }\n\n                if (this.currentOption === 1) {\n                    engine.changeScene(new SoundScene());\n                }\n\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    public keyUpHandler = (event : KeyboardEvent) =>{\n        const {key} = event;\n\n    }\n\n    public render = () =>{\n\n\n        const {context} = GameContext;\n\n        context.save();\n        context.beginPath();\n        context.fillStyle = \"black\";\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\n        context.closePath();\n        context.restore();\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"red\";\n        context.strokeStyle = \"red\";\n        context.font = \"45px STARWARS\";\n\n        context.fillText(this.options[0], this.width / 2, this.height / 3 + 0 * 30 + 50)\n        \n        context.closePath();\n        context.restore();\n\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"white\";\n        context.strokeStyle = \"red\";\n        context.font = \"25px STARWARS\";\n        context.lineWidth = 5;\n\n\n\n        for (let i = 1; i < this.options.length; i++) {\n\n            if (i === this.currentOption) {\n                context.strokeText(this.options[i],this.width / 2, this.height / 3 + i * 30 + 130)\n            }\n            context.fillText(this.options[i], this.width / 2, this.height / 3 + i * 30 + 130)\n        }\n        context.closePath();\n        context.restore();\n\n    }\n\n    public update = () =>{\n\n    }\n}\n\nexport default SettingsScene;","import Scene from \"../Scene\";\nimport GameContext from '../GameContext';\nimport Engine from '../Engine';\nimport PlayingScene from './PlayingScene';\nimport titleImg from './../../assets/imageedit_2_7701798241.jpg'\nimport GameOverScene from \"./GameOverScene\";\nimport SettingsScene from \"./SettingsScene\";\n\nclass MainMenuScene extends Scene {\n\n    private currentOption: number = 0;\n    private options = [\"PLAY\", \"SETTINGS\"];\n    private width = GameContext.context.canvas.width;\n    private height = GameContext.context.canvas.height;\n    private image = new Image;\n    \n\n    public render = () => {\n\n        this.image.src = titleImg;\n        const context = GameContext.context;\n\n\n        context.save();\n        context.beginPath();\n        context.fillStyle = \"black\";\n        context.fillRect(0 , 0 , context.canvas.width , context.canvas.height);\n        context.closePath();\n        context.restore();\n\n        context.drawImage(this.image ,-72,0 );\n\n\n        context.save();\n        context.beginPath();\n        context.textAlign = \"center\";\n        context.fillStyle = \"white\";\n        context.strokeStyle = \"red\";\n        context.font = \"25px STARWARS\";\n        context.lineWidth = 5;\n\n        for (let i = 0; i < this.options.length; i++) {\n\n            if (i === this.currentOption) {\n                context.strokeText(this.options[i],this.width / 2, this.height / 2 + i * 30 + 130)\n            }\n            context.fillText(this.options[i], this.width / 2, this.height / 2 + i * 30 + 130)\n        }\n        context.closePath();\n        context.restore();\n    };\n    public update = () => { };\n    public keyUpHandler = (event: KeyboardEvent) => { };\n    public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n\n        const key = event.key;\n\n        switch (key) {\n            case \"ArrowUp\":\n\n                this.currentOption = (this.currentOption - 1 + this.options.length) % this.options.length;\n\n                break;\n\n            case \"ArrowDown\":\n\n                this.currentOption = (this.currentOption + 1) % this.options.length;\n\n                break;\n            case \"Enter\":\n                \n                if (this.currentOption === 0) {\n                    engine.changeScene(new GameOverScene());\n                }\n\n                if (this.currentOption === 1) {\n                    engine.changeScene(new SettingsScene());\n                }\n\n\n\n\n\n                break;\n\n            default:\n                break;\n        }\n\n    };\n    public enter = () => { };\n\n}\n\nexport default MainMenuScene;","import GameContext from \"./GameContext\";\nimport Time from \"./Time\";\nimport Scene from \"./Scene\";\nimport PlayingScene from './Scenes/PlayingScene';\nimport MainMenuScene from './Scenes/MainMenuScene';\nimport PauseScene from \"./Scenes/PauseScene\";\n\nclass Engine {\n\n  private curretScene: Scene = null;\n  // Iniciar el motor del juego.\n\n public changeScene = (scene: Scene) =>{\n   this.curretScene = scene;\n   this.curretScene.enter();\n }\n\n  public start = () => {\n    this.init();\n    requestAnimationFrame(this.tick);\n  };\n\n  public keydownHandler = (event: KeyboardEvent) => {\n    this.curretScene.keyDownHandler(event , this);\n  };\n\n  public keyupHandler = (event: KeyboardEvent) => {\n    this.curretScene.keyUpHandler(event);\n  };\n\n  // Limpiar pantalla y dibujar fondo.\n  private clearScreen = () => {\n    const context = GameContext.context;\n    const canvas = context.canvas;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    context.save();\n    context.beginPath();\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, width, height);\n\n    context.closePath();\n    context.restore();\n  };\n\n  public init = () => {\n    this.curretScene = new MainMenuScene();\n    this.curretScene.enter();\n  };\n\n  // Método que se ejecuta en cada frame del juego.\n  public tick = () => {\n    this.clearScreen();\n    Time.update();\n    this.curretScene.update();\n    this.curretScene.render();\n\n    requestAnimationFrame(this.tick);\n  };\n}\n\nexport default Engine;\n","import Engine from \"./Engine\";\nimport GameContext from \"./GameContext\";\n\n//  Nota: No es necesario escribir código nuevo en este archivo.\n\nconst canvas = document.getElementById(\"game-area\") as HTMLCanvasElement;\nconst context = canvas.getContext(\"2d\");\n\nGameContext.context = context;\n\nconst engine = new Engine();\nengine.start();\ncanvas.addEventListener(\"keydown\", engine.keydownHandler);\ncanvas.addEventListener(\"keyup\", engine.keyupHandler);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}